<?php

namespace App\Http\Controllers;

use App\Models\User;
use Illuminate\Http\JsonResponse;
use Illuminate\Http\Request;
use Illuminate\Routing\Controller;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\DB;
use Illuminate\Support\Facades\Hash;
use Illuminate\Validation\ValidationException;
use Laravel\Passport\Client;
class UserController extends Controller
{
    //
    public function index()
    {
        return view('login');
    }

    public function registerPage()
    {
        return view('register');
    }

    public function register(Request $request)
    {
        try {
            $data = $request->validate([
                'email' => ['required', 'string', 'email', 'max:255', 'unique:users'],
                'password' => ['required', 'string', 'min:8', 'confirmed'],
                'phone' => ['required', 'string'],
                'name' => ['required', 'string'],

            ]);
        }catch (ValidationException $e){
            return redirect()->route('register');
        }

            $user = User::create([
                'email' => $data['email'],
                'password' => Hash::make($data['password']),
                'phone' => $data['phone'],
                'name' => $data['name'],
            ]);
            return redirect()->route('login');
        }


    public function login(Request $request)
    {
        // Use the default password_client.
        // important
        // It is generated by `php artisan passport:install`
        // It is generated by `php artisan passport:install`
        // It is generated by `php artisan passport:install`

        $client = Client::where('password_client', true)->first();
        // Password client is not found.
        if (!$client) { abort(500); }
        // Make request `POST /oauth/tokens` for getting token.
//        $authRequest = Request::create(
//            route('passport.token'),
//            'POST',
//            [
//                'grant_type' => 'password',
//                'client_id' => $client->id,
//                'client_secret' => $client->secret,
//                'username' => $request->get('email'),
//                'password' => $request->get('password'),
//            ]);
        $credentials = $request->only('email', 'password');

        if (Auth::attempt($credentials)) {
            // Authentication passed...
            return redirect()->intended('/cart');
        }
        return redirect()->route('login');
//        dd(app()->handle($authRequest));

    }

    public function logout(Request $request): \Illuminate\Http\RedirectResponse
    {
        Auth::logout();
        return redirect()->route('index');
    }
}
